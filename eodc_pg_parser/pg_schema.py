# generated by datamodel-codegen:
#   filename:  https://openeo.org/documentation/1.0/developers/api/assets/pg-schema.json
#   timestamp: 2022-07-08T11:29:33+00:00

from __future__ import annotations

from typing import List, Optional, Union, Dict

from pydantic import BaseModel, Extra, Field, constr


class ResultReference(BaseModel, extra=Extra.forbid):
    from_node: str
    node: ProcessNode


class ParameterReference(BaseModel, extra=Extra.forbid):
    from_parameter: str

class ProcessArgument(BaseModel):
    __root__: Optional[
        Union[
            ResultReference,
            ParameterReference,
            List[ProcessArgument],
            Dict[str, ProcessArgument],
            str,
            float,
            bool
        ]
    ]


class ProcessNode(BaseModel):
    process_id: constr(regex=r'^\w+$')
    namespace: Optional[Optional[str]] = None
    result: Optional[bool] = False
    description: Optional[Optional[str]] = None
    arguments: Dict[str, Optional[ProcessArgument]]
    

ResultReference.update_forward_refs()